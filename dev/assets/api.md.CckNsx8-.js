import{_ as n,c as o,j as t,a as e,G as s,B as a,o as i}from"./chunks/framework.CfMaHDsC.js";const V=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),d={name:"api.md"},p={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""};function I(B,l,L,R,c,O){const r=a("Badge");return i(),o("div",null,[t("details",p,[t("summary",null,[l[0]||(l[0]=t("a",{id:"Base.getindex-Tuple{DGGSArray, Integer, Integer, Integer, Vararg{Any}}",href:"#Base.getindex-Tuple{DGGSArray, Integer, Integer, Integer, Vararg{Any}}"},[t("span",{class:"jlbinding"},"Base.getindex")],-1)),l[1]||(l[1]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[2]||(l[2]=t("p",null,"get a cell of a DGGSArray",-1)),l[3]||(l[3]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L59",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",u,[t("summary",null,[l[4]||(l[4]=t("a",{id:"Base.getindex-Tuple{DGGSArray, Q2DI, Integer}",href:"#Base.getindex-Tuple{DGGSArray, Q2DI, Integer}"},[t("span",{class:"jlbinding"},"Base.getindex")],-1)),l[5]||(l[5]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[6]||(l[6]=t("p",null,"get a ring of a DGGArray",-1)),l[7]||(l[7]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L65",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",g,[t("summary",null,[l[8]||(l[8]=t("a",{id:"Base.getindex-Tuple{DGGSArray, Q2DI}",href:"#Base.getindex-Tuple{DGGSArray, Q2DI}"},[t("span",{class:"jlbinding"},"Base.getindex")],-1)),l[9]||(l[9]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[10]||(l[10]=t("p",null,"get a cell of a DGGSArray",-1)),l[11]||(l[11]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L55",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",b,[t("summary",null,[l[12]||(l[12]=t("a",{id:"Base.getindex-Tuple{DGGSArray}",href:"#Base.getindex-Tuple{DGGSArray}"},[t("span",{class:"jlbinding"},"Base.getindex")],-1)),l[13]||(l[13]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[14]||(l[14]=t("p",null,"filter any dimension of a DGGSArray",-1)),l[15]||(l[15]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",G,[t("summary",null,[l[16]||(l[16]=t("a",{id:"Base.getindex-Union{Tuple{R}, Tuple{DGGSArray, Q2DI, UnitRange{R}}} where R<:Integer",href:"#Base.getindex-Union{Tuple{R}, Tuple{DGGSArray, Q2DI, UnitRange{R}}} where R<:Integer"},[t("span",{class:"jlbinding"},"Base.getindex")],-1)),l[17]||(l[17]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[18]||(l[18]=t("p",null,"get a disk of a DGGArray",-1)),l[19]||(l[19]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L78",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",f,[t("summary",null,[l[20]||(l[20]=t("a",{id:"DGGS._transform_points-Union{Tuple{V}, Tuple{U}, Tuple{AbstractArray{Tuple{U, V}, 1}, Any}} where {U<:Real, V<:Real}",href:"#DGGS._transform_points-Union{Tuple{V}, Tuple{U}, Tuple{AbstractArray{Tuple{U, V}, 1}, Any}} where {U<:Real, V<:Real}"},[t("span",{class:"jlbinding"},"DGGS._transform_points")],-1)),l[21]||(l[21]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[22]||(l[22]=t("p",null,"Transforms Vector of (lon,lat) coords to DGGRID indices",-1)),l[23]||(l[23]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/dggrid.jl#L55",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",j,[t("summary",null,[l[24]||(l[24]=t("a",{id:"DGGS.call_dggrid-Tuple{Dict}",href:"#DGGS.call_dggrid-Tuple{Dict}"},[t("span",{class:"jlbinding"},"DGGS.call_dggrid")],-1)),l[25]||(l[25]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[26]||(l[26]=t("p",null,"Execute sytem call of DGGRID binary",-1)),l[27]||(l[27]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/dggrid.jl#L4-L6",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",y,[t("summary",null,[l[28]||(l[28]=t("a",{id:"DGGS.clip-Tuple{UnitRange, Any}",href:"#DGGS.clip-Tuple{UnitRange, Any}"},[t("span",{class:"jlbinding"},"DGGS.clip")],-1)),l[29]||(l[29]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[30]||(l[30]=t("p",null,"clip range that may lie in padding to quad boundaries",-1)),l[31]||(l[31]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/neighbors.jl#L29-L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",m,[t("summary",null,[l[32]||(l[32]=t("a",{id:"DGGS.disk_mask-Tuple{Integer}",href:"#DGGS.disk_mask-Tuple{Integer}"},[t("span",{class:"jlbinding"},"DGGS.disk_mask")],-1)),l[33]||(l[33]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[34]||(l[34]=t("p",null,[e("Create a mask of cells arround a center cell within a radius "),t("code",null,"disk_size")],-1)),l[35]||(l[35]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/neighbors.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",D,[t("summary",null,[l[36]||(l[36]=t("a",{id:"DGGS.filter_null-Tuple{Any}",href:"#DGGS.filter_null-Tuple{Any}"},[t("span",{class:"jlbinding"},"DGGS.filter_null")],-1)),l[37]||(l[37]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[38]||(l[38]=t("p",null,"Apply function f after filtering of missing and NAN values",-1)),l[39]||(l[39]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L167",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",S,[t("summary",null,[l[40]||(l[40]=t("a",{id:"DGGS.plot_native-Tuple{DGGSArray}",href:"#DGGS.plot_native-Tuple{DGGSArray}"},[t("span",{class:"jlbinding"},"DGGS.plot_native")],-1)),l[41]||(l[41]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[42]||(l[42]=t("p",null,"Plot a DGGSArray nativeley on a icosahedron",-1)),l[43]||(l[43]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L517-L519",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",T,[t("summary",null,[l[44]||(l[44]=t("a",{id:"DGGS.ring_mask-Tuple{Integer}",href:"#DGGS.ring_mask-Tuple{Integer}"},[t("span",{class:"jlbinding"},"DGGS.ring_mask")],-1)),l[45]||(l[45]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[46]||(l[46]=t("p",null,[e("Create a mask of cells having the same distance "),t("code",null,"ring_size"),e(" to a center cell")],-1)),l[47]||(l[47]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/neighbors.jl#L10-L12",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",A,[t("summary",null,[l[48]||(l[48]=t("a",{id:"DGGS.to_dggs_array-Tuple{DimensionalData.AbstractDimArray, Integer}",href:"#DGGS.to_dggs_array-Tuple{DimensionalData.AbstractDimArray, Integer}"},[t("span",{class:"jlbinding"},"DGGS.to_dggs_array")],-1)),l[49]||(l[49]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[50]||(l[50]=t("p",null,"Convert a geographic lat/lon raster to a DGGAArray",-1)),l[51]||(l[51]=t("p",null,[e("agg_type: "),t("code",null,":convert"),e(" will return a Float64 array and "),t("code",null,":round"),e(" will keep the element type that might loose precision")],-1)),l[52]||(l[52]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/array.jl#L180-L184",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",k,[t("summary",null,[l[53]||(l[53]=t("a",{id:"DGGS.to_dggs_layer-Tuple{YAXArrays.Datasets.Dataset, Integer}",href:"#DGGS.to_dggs_layer-Tuple{YAXArrays.Datasets.Dataset, Integer}"},[t("span",{class:"jlbinding"},"DGGS.to_dggs_layer")],-1)),l[54]||(l[54]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[55]||(l[55]=t("p",null,[e("Transforms a "),t("code",null,"YAXArrays.Dataset"),e(" in geographic lat/lon ratser to a DGGSLayer at agiven layer")],-1)),l[56]||(l[56]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/layer.jl#L97-L99",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",x,[t("summary",null,[l[57]||(l[57]=t("a",{id:"DGGS.transform_points-Union{Tuple{B}, Tuple{A}, Tuple{AbstractVector{A}, AbstractVector{B}, Integer}} where {A<:Real, B<:Real}",href:"#DGGS.transform_points-Union{Tuple{B}, Tuple{A}, Tuple{AbstractVector{A}, AbstractVector{B}, Integer}} where {A<:Real, B<:Real}"},[t("span",{class:"jlbinding"},"DGGS.transform_points")],-1)),l[58]||(l[58]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[59]||(l[59]=t("p",null,"chunk_size_points: number of points (e.g. pixels) to transform in one block (task of a thread)",-1)),l[60]||(l[60]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/dggrid.jl#L144-L146",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",M,[t("summary",null,[l[61]||(l[61]=t("a",{id:"DGGS.width-Tuple{Integer}",href:"#DGGS.width-Tuple{Integer}"},[t("span",{class:"jlbinding"},"DGGS.width")],-1)),l[62]||(l[62]=e()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[63]||(l[63]=t("p",null,"position of last row or column in a quad matrix of that level",-1)),l[64]||(l[64]=t("p",null,[t("a",{href:"https://github.com/danlooo/DGGS.jl/blob/aa5666c82ca0039908147600fd012b636380db66/src/pyramid.jl#L93",target:"_blank",rel:"noreferrer"},"source")],-1))])])}const v=n(d,[["render",I]]);export{V as __pageData,v as default};
