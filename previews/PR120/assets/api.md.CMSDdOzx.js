import{_ as n,c as o,j as l,a as t,G as s,B as a,o as d}from"./chunks/framework.BOTvTcuh.js";const V=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),i={name:"api.md"},p={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""};function I(B,e,L,R,c,O){const r=a("Badge");return d(),o("div",null,[l("details",p,[l("summary",null,[e[0]||(e[0]=l("a",{id:"Base.getindex-Tuple{DGGSArray, Integer, Integer, Integer, Vararg{Any}}",href:"#Base.getindex-Tuple{DGGSArray, Integer, Integer, Integer, Vararg{Any}}"},[l("span",{class:"jlbinding"},"Base.getindex")],-1)),e[1]||(e[1]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[2]||(e[2]=l("p",null,"get a cell of a DGGSArray",-1)),e[3]||(e[3]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L59",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",u,[l("summary",null,[e[4]||(e[4]=l("a",{id:"Base.getindex-Tuple{DGGSArray, Q2DI, Integer}",href:"#Base.getindex-Tuple{DGGSArray, Q2DI, Integer}"},[l("span",{class:"jlbinding"},"Base.getindex")],-1)),e[5]||(e[5]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[6]||(e[6]=l("p",null,"get a ring of a DGGArray",-1)),e[7]||(e[7]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L65",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",b,[l("summary",null,[e[8]||(e[8]=l("a",{id:"Base.getindex-Tuple{DGGSArray, Q2DI}",href:"#Base.getindex-Tuple{DGGSArray, Q2DI}"},[l("span",{class:"jlbinding"},"Base.getindex")],-1)),e[9]||(e[9]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[10]||(e[10]=l("p",null,"get a cell of a DGGSArray",-1)),e[11]||(e[11]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L55",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",g,[l("summary",null,[e[12]||(e[12]=l("a",{id:"Base.getindex-Tuple{DGGSArray}",href:"#Base.getindex-Tuple{DGGSArray}"},[l("span",{class:"jlbinding"},"Base.getindex")],-1)),e[13]||(e[13]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[14]||(e[14]=l("p",null,"filter any dimension of a DGGSArray",-1)),e[15]||(e[15]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",f,[l("summary",null,[e[16]||(e[16]=l("a",{id:"Base.getindex-Union{Tuple{R}, Tuple{DGGSArray, Q2DI, UnitRange{R}}} where R<:Integer",href:"#Base.getindex-Union{Tuple{R}, Tuple{DGGSArray, Q2DI, UnitRange{R}}} where R<:Integer"},[l("span",{class:"jlbinding"},"Base.getindex")],-1)),e[17]||(e[17]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[18]||(e[18]=l("p",null,"get a disk of a DGGArray",-1)),e[19]||(e[19]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L78",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",G,[l("summary",null,[e[20]||(e[20]=l("a",{id:"DGGS._transform_points-Union{Tuple{V}, Tuple{U}, Tuple{AbstractArray{Tuple{U, V}, 1}, Any}} where {U<:Real, V<:Real}",href:"#DGGS._transform_points-Union{Tuple{V}, Tuple{U}, Tuple{AbstractArray{Tuple{U, V}, 1}, Any}} where {U<:Real, V<:Real}"},[l("span",{class:"jlbinding"},"DGGS._transform_points")],-1)),e[21]||(e[21]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[22]||(e[22]=l("p",null,"Transforms Vector of (lon,lat) coords to DGGRID indices",-1)),e[23]||(e[23]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/dggrid.jl#L55",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",j,[l("summary",null,[e[24]||(e[24]=l("a",{id:"DGGS.call_dggrid-Tuple{Dict}",href:"#DGGS.call_dggrid-Tuple{Dict}"},[l("span",{class:"jlbinding"},"DGGS.call_dggrid")],-1)),e[25]||(e[25]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[26]||(e[26]=l("p",null,"Execute sytem call of DGGRID binary",-1)),e[27]||(e[27]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/dggrid.jl#L4-L6",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",y,[l("summary",null,[e[28]||(e[28]=l("a",{id:"DGGS.clip-Tuple{UnitRange, Any}",href:"#DGGS.clip-Tuple{UnitRange, Any}"},[l("span",{class:"jlbinding"},"DGGS.clip")],-1)),e[29]||(e[29]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[30]||(e[30]=l("p",null,"clip range that may lie in padding to quad boundaries",-1)),e[31]||(e[31]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/neighbors.jl#L29-L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",m,[l("summary",null,[e[32]||(e[32]=l("a",{id:"DGGS.disk_mask-Tuple{Integer}",href:"#DGGS.disk_mask-Tuple{Integer}"},[l("span",{class:"jlbinding"},"DGGS.disk_mask")],-1)),e[33]||(e[33]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[34]||(e[34]=l("p",null,[t("Create a mask of cells arround a center cell within a radius "),l("code",null,"disk_size")],-1)),e[35]||(e[35]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/neighbors.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",D,[l("summary",null,[e[36]||(e[36]=l("a",{id:"DGGS.filter_null-Tuple{Any}",href:"#DGGS.filter_null-Tuple{Any}"},[l("span",{class:"jlbinding"},"DGGS.filter_null")],-1)),e[37]||(e[37]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[38]||(e[38]=l("p",null,"Apply function f after filtering of missing and NAN values",-1)),e[39]||(e[39]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L167",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",S,[l("summary",null,[e[40]||(e[40]=l("a",{id:"DGGS.plot_native-Tuple{DGGSArray}",href:"#DGGS.plot_native-Tuple{DGGSArray}"},[l("span",{class:"jlbinding"},"DGGS.plot_native")],-1)),e[41]||(e[41]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[42]||(e[42]=l("p",null,"Plot a DGGSArray nativeley on a icosahedron",-1)),e[43]||(e[43]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L517-L519",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",T,[l("summary",null,[e[44]||(e[44]=l("a",{id:"DGGS.ring_mask-Tuple{Integer}",href:"#DGGS.ring_mask-Tuple{Integer}"},[l("span",{class:"jlbinding"},"DGGS.ring_mask")],-1)),e[45]||(e[45]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[46]||(e[46]=l("p",null,[t("Create a mask of cells having the same distance "),l("code",null,"ring_size"),t(" to a center cell")],-1)),e[47]||(e[47]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/neighbors.jl#L10-L12",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",A,[l("summary",null,[e[48]||(e[48]=l("a",{id:"DGGS.to_dggs_array-Tuple{DimensionalData.AbstractDimArray, Integer}",href:"#DGGS.to_dggs_array-Tuple{DimensionalData.AbstractDimArray, Integer}"},[l("span",{class:"jlbinding"},"DGGS.to_dggs_array")],-1)),e[49]||(e[49]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[50]||(e[50]=l("p",null,"Convert a geographic lat/lon raster to a DGGAArray",-1)),e[51]||(e[51]=l("p",null,[t("agg_type: "),l("code",null,":convert"),t(" will return a Float64 array and "),l("code",null,":round"),t(" will keep the element type that might loose precision")],-1)),e[52]||(e[52]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/array.jl#L180-L184",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",k,[l("summary",null,[e[53]||(e[53]=l("a",{id:"DGGS.to_dggs_layer-Tuple{YAXArrays.Datasets.Dataset, Integer}",href:"#DGGS.to_dggs_layer-Tuple{YAXArrays.Datasets.Dataset, Integer}"},[l("span",{class:"jlbinding"},"DGGS.to_dggs_layer")],-1)),e[54]||(e[54]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[55]||(e[55]=l("p",null,[t("Transforms a "),l("code",null,"YAXArrays.Dataset"),t(" in geographic lat/lon ratser to a DGGSLayer at agiven layer")],-1)),e[56]||(e[56]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/layer.jl#L97-L99",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",x,[l("summary",null,[e[57]||(e[57]=l("a",{id:"DGGS.transform_points-Union{Tuple{B}, Tuple{A}, Tuple{AbstractVector{A}, AbstractVector{B}, Integer}} where {A<:Real, B<:Real}",href:"#DGGS.transform_points-Union{Tuple{B}, Tuple{A}, Tuple{AbstractVector{A}, AbstractVector{B}, Integer}} where {A<:Real, B<:Real}"},[l("span",{class:"jlbinding"},"DGGS.transform_points")],-1)),e[58]||(e[58]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[59]||(e[59]=l("p",null,"chunk_size_points: number of points (e.g. pixels) to transform in one block (task of a thread)",-1)),e[60]||(e[60]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/dggrid.jl#L139-L141",target:"_blank",rel:"noreferrer"},"source")],-1))]),l("details",M,[l("summary",null,[e[61]||(e[61]=l("a",{id:"DGGS.width-Tuple{Integer}",href:"#DGGS.width-Tuple{Integer}"},[l("span",{class:"jlbinding"},"DGGS.width")],-1)),e[62]||(e[62]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[63]||(e[63]=l("p",null,"position of last row or column in a quad matrix of that level",-1)),e[64]||(e[64]=l("p",null,[l("a",{href:"https://github.com/danlooo/DGGS.jl/blob/85ef2f22ee6eb56c0a993ebd57dc28db395d401f/src/pyramid.jl#L93",target:"_blank",rel:"noreferrer"},"source")],-1))])])}const v=n(i,[["render",I]]);export{V as __pageData,v as default};
