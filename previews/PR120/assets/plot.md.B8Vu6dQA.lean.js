import{_ as a,c as i,a5 as t,o as e}from"./chunks/framework.BOTvTcuh.js";const n="/DGGS.jl/previews/PR120/assets/iuaveys.lNP49yiv.jpeg",p="/DGGS.jl/previews/PR120/assets/zfyyobk.B_qsDcdt.jpeg",l="/DGGS.jl/previews/PR120/assets/kqznedd.DsvHz2A6.jpeg",u=JSON.parse('{"title":"Plot","description":"","frontmatter":{},"headers":[],"relativePath":"plot.md","filePath":"plot.md","lastUpdated":null}'),h={name:"plot.md"};function o(d,s,k,r,c,g){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="plot" tabindex="-1">Plot <a class="header-anchor" href="#plot" aria-label="Permalink to &quot;Plot&quot;">​</a></h1><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GLMakie</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DGGS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open_dggs_pyramid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://s3.bgc-jena.mpg.de:9000/dggs/datasets/modis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ndvi</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DGGSArray{Union{Missing, Float32}, 10}</span></span>
<span class="line"><span>Name:		ndvi</span></span>
<span class="line"><span>Units:		NDVI</span></span>
<span class="line"><span>DGGS:		DGGRID ISEA4H Q2DI ⬢ at level 10</span></span>
<span class="line"><span>Attributes:	18</span></span>
<span class="line"><span>Non spatial axes:</span></span>
<span class="line"><span>  Ti 216 Dates.DateTime points</span></span></code></pre></div><p>Plotting is performed on a <code>DGGSArray</code> at a given spatial resolution level. Selecting on non-spatial dimensions (e.g. Time) can be done later on in the interactive plot. Image resolution can be adjusted using the <code>resolution</code> argument of the <code>plot</code> method. Plotting requires to convert the DGGS space back to geographical coordinates. The coordinate transformation is downloaded from a cache server instead of computed if the given resolution is available.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span></code></pre></div><p><img src="`+n+'" alt=""></p><p>Plot as a map:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a; type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+p+'" alt=""></p><p>Plot as a native icosahedron:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a; type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:native</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+l+'" alt=""></p>',12)]))}const y=a(h,[["render",o]]);export{u as __pageData,y as default};
