import{_ as n,c as o,j as e,a as t,G as s,B as a,o as i}from"./chunks/framework.BOTvTcuh.js";const V=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),d={name:"api.md"},p={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function M(I,l,B,L,R,O){const r=a("Badge");return i(),o("div",null,[e("details",p,[e("summary",null,[l[0]||(l[0]=e("a",{id:"Base.getindex-Tuple{DGGSArray, Integer, Integer, Integer, Vararg{Any}}",href:"#Base.getindex-Tuple{DGGSArray, Integer, Integer, Integer, Vararg{Any}}"},[e("span",{class:"jlbinding"},"Base.getindex")],-1)),l[1]||(l[1]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[2]||(l[2]=e("p",null,"get a cell of a DGGSArray",-1)),l[3]||(l[3]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L59",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",u,[e("summary",null,[l[4]||(l[4]=e("a",{id:"Base.getindex-Tuple{DGGSArray, Q2DI, Integer}",href:"#Base.getindex-Tuple{DGGSArray, Q2DI, Integer}"},[e("span",{class:"jlbinding"},"Base.getindex")],-1)),l[5]||(l[5]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[6]||(l[6]=e("p",null,"get a ring of a DGGArray",-1)),l[7]||(l[7]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L65",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",g,[e("summary",null,[l[8]||(l[8]=e("a",{id:"Base.getindex-Tuple{DGGSArray, Q2DI}",href:"#Base.getindex-Tuple{DGGSArray, Q2DI}"},[e("span",{class:"jlbinding"},"Base.getindex")],-1)),l[9]||(l[9]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[10]||(l[10]=e("p",null,"get a cell of a DGGSArray",-1)),l[11]||(l[11]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L55",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",b,[e("summary",null,[l[12]||(l[12]=e("a",{id:"Base.getindex-Tuple{DGGSArray}",href:"#Base.getindex-Tuple{DGGSArray}"},[e("span",{class:"jlbinding"},"Base.getindex")],-1)),l[13]||(l[13]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[14]||(l[14]=e("p",null,"filter any dimension of a DGGSArray",-1)),l[15]||(l[15]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",f,[e("summary",null,[l[16]||(l[16]=e("a",{id:"Base.getindex-Union{Tuple{R}, Tuple{DGGSArray, Q2DI, UnitRange{R}}} where R<:Integer",href:"#Base.getindex-Union{Tuple{R}, Tuple{DGGSArray, Q2DI, UnitRange{R}}} where R<:Integer"},[e("span",{class:"jlbinding"},"Base.getindex")],-1)),l[17]||(l[17]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[18]||(l[18]=e("p",null,"get a disk of a DGGArray",-1)),l[19]||(l[19]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L78",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",G,[e("summary",null,[l[20]||(l[20]=e("a",{id:"DGGS._transform_points-Union{Tuple{V}, Tuple{U}, Tuple{AbstractArray{Tuple{U, V}, 1}, Any}} where {U<:Real, V<:Real}",href:"#DGGS._transform_points-Union{Tuple{V}, Tuple{U}, Tuple{AbstractArray{Tuple{U, V}, 1}, Any}} where {U<:Real, V<:Real}"},[e("span",{class:"jlbinding"},"DGGS._transform_points")],-1)),l[21]||(l[21]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[22]||(l[22]=e("p",null,"Transforms Vector of (lon,lat) coords to DGGRID indices",-1)),l[23]||(l[23]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/dggrid.jl#L55",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",j,[e("summary",null,[l[24]||(l[24]=e("a",{id:"DGGS.call_dggrid-Tuple{Dict}",href:"#DGGS.call_dggrid-Tuple{Dict}"},[e("span",{class:"jlbinding"},"DGGS.call_dggrid")],-1)),l[25]||(l[25]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[26]||(l[26]=e("p",null,"Execute sytem call of DGGRID binary",-1)),l[27]||(l[27]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/dggrid.jl#L4-L6",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",y,[e("summary",null,[l[28]||(l[28]=e("a",{id:"DGGS.clip-Tuple{UnitRange, Any}",href:"#DGGS.clip-Tuple{UnitRange, Any}"},[e("span",{class:"jlbinding"},"DGGS.clip")],-1)),l[29]||(l[29]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[30]||(l[30]=e("p",null,"clip range that may lie in padding to quad boundaries",-1)),l[31]||(l[31]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/neighbors.jl#L29-L31",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",m,[e("summary",null,[l[32]||(l[32]=e("a",{id:"DGGS.disk_mask-Tuple{Integer}",href:"#DGGS.disk_mask-Tuple{Integer}"},[e("span",{class:"jlbinding"},"DGGS.disk_mask")],-1)),l[33]||(l[33]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[34]||(l[34]=e("p",null,[t("Create a mask of cells arround a center cell within a radius "),e("code",null,"disk_size")],-1)),l[35]||(l[35]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/neighbors.jl#L1-L3",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",D,[e("summary",null,[l[36]||(l[36]=e("a",{id:"DGGS.filter_null-Tuple{Any}",href:"#DGGS.filter_null-Tuple{Any}"},[e("span",{class:"jlbinding"},"DGGS.filter_null")],-1)),l[37]||(l[37]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[38]||(l[38]=e("p",null,"Apply function f after filtering of missing and NAN values",-1)),l[39]||(l[39]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L167",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",S,[e("summary",null,[l[40]||(l[40]=e("a",{id:"DGGS.plot_native-Tuple{DGGSArray}",href:"#DGGS.plot_native-Tuple{DGGSArray}"},[e("span",{class:"jlbinding"},"DGGS.plot_native")],-1)),l[41]||(l[41]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[42]||(l[42]=e("p",null,"Plot a DGGSArray nativeley on a icosahedron",-1)),l[43]||(l[43]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L517-L519",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",T,[e("summary",null,[l[44]||(l[44]=e("a",{id:"DGGS.ring_mask-Tuple{Integer}",href:"#DGGS.ring_mask-Tuple{Integer}"},[e("span",{class:"jlbinding"},"DGGS.ring_mask")],-1)),l[45]||(l[45]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[46]||(l[46]=e("p",null,[t("Create a mask of cells having the same distance "),e("code",null,"ring_size"),t(" to a center cell")],-1)),l[47]||(l[47]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/neighbors.jl#L10-L12",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",A,[e("summary",null,[l[48]||(l[48]=e("a",{id:"DGGS.to_dggs_array-Tuple{DimensionalData.AbstractDimArray, Integer}",href:"#DGGS.to_dggs_array-Tuple{DimensionalData.AbstractDimArray, Integer}"},[e("span",{class:"jlbinding"},"DGGS.to_dggs_array")],-1)),l[49]||(l[49]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[50]||(l[50]=e("p",null,"Convert a geographic lat/lon raster to a DGGAArray",-1)),l[51]||(l[51]=e("p",null,[t("agg_type: "),e("code",null,":convert"),t(" will return a Float64 array and "),e("code",null,":round"),t(" will keep the element type that might loose precision")],-1)),l[52]||(l[52]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/array.jl#L180-L184",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",k,[e("summary",null,[l[53]||(l[53]=e("a",{id:"DGGS.to_dggs_layer-Tuple{YAXArrays.Datasets.Dataset, Integer}",href:"#DGGS.to_dggs_layer-Tuple{YAXArrays.Datasets.Dataset, Integer}"},[e("span",{class:"jlbinding"},"DGGS.to_dggs_layer")],-1)),l[54]||(l[54]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[55]||(l[55]=e("p",null,[t("Transforms a "),e("code",null,"YAXArrays.Dataset"),t(" in geographic lat/lon ratser to a DGGSLayer at agiven layer")],-1)),l[56]||(l[56]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/layer.jl#L106-L108",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",x,[e("summary",null,[l[57]||(l[57]=e("a",{id:"DGGS.transform_points-Union{Tuple{B}, Tuple{A}, Tuple{AbstractVector{A}, AbstractVector{B}, Integer}} where {A<:Real, B<:Real}",href:"#DGGS.transform_points-Union{Tuple{B}, Tuple{A}, Tuple{AbstractVector{A}, AbstractVector{B}, Integer}} where {A<:Real, B<:Real}"},[e("span",{class:"jlbinding"},"DGGS.transform_points")],-1)),l[58]||(l[58]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[59]||(l[59]=e("p",null,"chunk_size_points: number of points (e.g. pixels) to transform in one block (task of a thread)",-1)),l[60]||(l[60]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/dggrid.jl#L139-L141",target:"_blank",rel:"noreferrer"},"source")],-1))]),e("details",c,[e("summary",null,[l[61]||(l[61]=e("a",{id:"DGGS.width-Tuple{Integer}",href:"#DGGS.width-Tuple{Integer}"},[e("span",{class:"jlbinding"},"DGGS.width")],-1)),l[62]||(l[62]=t()),s(r,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),l[63]||(l[63]=e("p",null,"position of last row or column in a quad matrix of that level",-1)),l[64]||(l[64]=e("p",null,[e("a",{href:"https://github.com/danlooo/DGGS.jl/blob/f2ee365bac39aa80fd1bc476d10180355c4a018f/src/pyramid.jl#L93",target:"_blank",rel:"noreferrer"},"source")],-1))])])}const v=n(d,[["render",M]]);export{V as __pageData,v as default};
